// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Mon, 16 May 2016 03:35:25 MSK.
// By http://git.io/cgogen. DO NOT EDIT.

#include "vulkan/vulkan.h"
#include <stdlib.h>
#pragma once

#define __CGOGEN 1

// PFN_vkAllocationFunction_9c4c5852 is a proxy for callback PFN_vkAllocationFunction.
void* PFN_vkAllocationFunction_9c4c5852(void* pUserData, unsigned long int size, unsigned long int alignment, VkSystemAllocationScope allocationScope);

// PFN_vkReallocationFunction_622801d0 is a proxy for callback PFN_vkReallocationFunction.
void* PFN_vkReallocationFunction_622801d0(void* pUserData, void* pOriginal, unsigned long int size, unsigned long int alignment, VkSystemAllocationScope allocationScope);

// PFN_vkFreeFunction_28edd2c6 is a proxy for callback PFN_vkFreeFunction.
void PFN_vkFreeFunction_28edd2c6(void* pUserData, void* pMemory);

// PFN_vkInternalAllocationNotification_eadf4b16 is a proxy for callback PFN_vkInternalAllocationNotification.
void PFN_vkInternalAllocationNotification_eadf4b16(void* pUserData, unsigned long int size, VkInternalAllocationType allocationType, VkSystemAllocationScope allocationScope);

// PFN_vkInternalFreeNotification_ce87d96 is a proxy for callback PFN_vkInternalFreeNotification.
void PFN_vkInternalFreeNotification_ce87d96(void* pUserData, unsigned long int size, VkInternalAllocationType allocationType, VkSystemAllocationScope allocationScope);

// PFN_vkVoidFunction_4cd0423b is a proxy for callback PFN_vkVoidFunction.
void PFN_vkVoidFunction_4cd0423b();

// PFN_vkCreateInstance_c4de473d is a proxy for callback PFN_vkCreateInstance.
VkResult PFN_vkCreateInstance_c4de473d(VkInstanceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkInstance* pInstance);

// PFN_vkDestroyInstance_38a99281 is a proxy for callback PFN_vkDestroyInstance.
void PFN_vkDestroyInstance_38a99281(VkInstance instance, VkAllocationCallbacks* pAllocator);

// PFN_vkEnumeratePhysicalDevices_1025caff is a proxy for callback PFN_vkEnumeratePhysicalDevices.
VkResult PFN_vkEnumeratePhysicalDevices_1025caff(VkInstance instance, unsigned int* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices);

// PFN_vkGetPhysicalDeviceFeatures_be6387a0 is a proxy for callback PFN_vkGetPhysicalDeviceFeatures.
void PFN_vkGetPhysicalDeviceFeatures_be6387a0(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures* pFeatures);

// PFN_vkGetPhysicalDeviceFormatProperties_df58990e is a proxy for callback PFN_vkGetPhysicalDeviceFormatProperties.
void PFN_vkGetPhysicalDeviceFormatProperties_df58990e(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties* pFormatProperties);

// PFN_vkGetPhysicalDeviceImageFormatProperties_1362d074 is a proxy for callback PFN_vkGetPhysicalDeviceImageFormatProperties.
VkResult PFN_vkGetPhysicalDeviceImageFormatProperties_1362d074(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType _type, VkImageTiling tiling, unsigned int usage, unsigned int flags, VkImageFormatProperties* pImageFormatProperties);

// PFN_vkGetPhysicalDeviceProperties_b4924563 is a proxy for callback PFN_vkGetPhysicalDeviceProperties.
void PFN_vkGetPhysicalDeviceProperties_b4924563(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties* pProperties);

// PFN_vkGetPhysicalDeviceQueueFamilyProperties_8aa13a90 is a proxy for callback PFN_vkGetPhysicalDeviceQueueFamilyProperties.
void PFN_vkGetPhysicalDeviceQueueFamilyProperties_8aa13a90(VkPhysicalDevice physicalDevice, unsigned int* pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties);

// PFN_vkGetPhysicalDeviceMemoryProperties_2e4807f is a proxy for callback PFN_vkGetPhysicalDeviceMemoryProperties.
void PFN_vkGetPhysicalDeviceMemoryProperties_2e4807f(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties* pMemoryProperties);

// PFN_vkCreateDevice_f58db1eb is a proxy for callback PFN_vkCreateDevice.
VkResult PFN_vkCreateDevice_f58db1eb(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDevice* pDevice);

// PFN_vkDestroyDevice_c9a9759c is a proxy for callback PFN_vkDestroyDevice.
void PFN_vkDestroyDevice_c9a9759c(VkDevice device, VkAllocationCallbacks* pAllocator);

// PFN_vkEnumerateInstanceExtensionProperties_43068f6e is a proxy for callback PFN_vkEnumerateInstanceExtensionProperties.
VkResult PFN_vkEnumerateInstanceExtensionProperties_43068f6e(char* pLayerName, unsigned int* pPropertyCount, VkExtensionProperties* pProperties);

// PFN_vkEnumerateDeviceExtensionProperties_1f7c3436 is a proxy for callback PFN_vkEnumerateDeviceExtensionProperties.
VkResult PFN_vkEnumerateDeviceExtensionProperties_1f7c3436(VkPhysicalDevice physicalDevice, char* pLayerName, unsigned int* pPropertyCount, VkExtensionProperties* pProperties);

// PFN_vkEnumerateInstanceLayerProperties_692027fa is a proxy for callback PFN_vkEnumerateInstanceLayerProperties.
VkResult PFN_vkEnumerateInstanceLayerProperties_692027fa(unsigned int* pPropertyCount, VkLayerProperties* pProperties);

// PFN_vkEnumerateDeviceLayerProperties_991fc1be is a proxy for callback PFN_vkEnumerateDeviceLayerProperties.
VkResult PFN_vkEnumerateDeviceLayerProperties_991fc1be(VkPhysicalDevice physicalDevice, unsigned int* pPropertyCount, VkLayerProperties* pProperties);

// PFN_vkGetDeviceQueue_a2e8a65a is a proxy for callback PFN_vkGetDeviceQueue.
void PFN_vkGetDeviceQueue_a2e8a65a(VkDevice device, unsigned int queueFamilyIndex, unsigned int queueIndex, VkQueue* pQueue);

// PFN_vkQueueSubmit_e01486a5 is a proxy for callback PFN_vkQueueSubmit.
VkResult PFN_vkQueueSubmit_e01486a5(VkQueue queue, unsigned int submitCount, VkSubmitInfo* pSubmits, VkFence fence);

// PFN_vkQueueWaitIdle_ce1a9277 is a proxy for callback PFN_vkQueueWaitIdle.
VkResult PFN_vkQueueWaitIdle_ce1a9277(VkQueue queue);

// PFN_vkDeviceWaitIdle_beed6562 is a proxy for callback PFN_vkDeviceWaitIdle.
VkResult PFN_vkDeviceWaitIdle_beed6562(VkDevice device);

// PFN_vkAllocateMemory_4fe39399 is a proxy for callback PFN_vkAllocateMemory.
VkResult PFN_vkAllocateMemory_4fe39399(VkDevice device, VkMemoryAllocateInfo* pAllocateInfo, VkAllocationCallbacks* pAllocator, VkDeviceMemory* pMemory);

// PFN_vkFreeMemory_80ce986a is a proxy for callback PFN_vkFreeMemory.
void PFN_vkFreeMemory_80ce986a(VkDevice device, VkDeviceMemory memory, VkAllocationCallbacks* pAllocator);

// PFN_vkMapMemory_55d2603d is a proxy for callback PFN_vkMapMemory.
VkResult PFN_vkMapMemory_55d2603d(VkDevice device, VkDeviceMemory memory, unsigned long long offset, unsigned long long size, unsigned int flags, void** ppData);

// PFN_vkUnmapMemory_2c1026ee is a proxy for callback PFN_vkUnmapMemory.
void PFN_vkUnmapMemory_2c1026ee(VkDevice device, VkDeviceMemory memory);

// PFN_vkFlushMappedMemoryRanges_912839f9 is a proxy for callback PFN_vkFlushMappedMemoryRanges.
VkResult PFN_vkFlushMappedMemoryRanges_912839f9(VkDevice device, unsigned int memoryRangeCount, VkMappedMemoryRange* pMemoryRanges);

// PFN_vkInvalidateMappedMemoryRanges_583cf236 is a proxy for callback PFN_vkInvalidateMappedMemoryRanges.
VkResult PFN_vkInvalidateMappedMemoryRanges_583cf236(VkDevice device, unsigned int memoryRangeCount, VkMappedMemoryRange* pMemoryRanges);

// PFN_vkGetDeviceMemoryCommitment_26e8ee13 is a proxy for callback PFN_vkGetDeviceMemoryCommitment.
void PFN_vkGetDeviceMemoryCommitment_26e8ee13(VkDevice device, VkDeviceMemory memory, unsigned long long* pCommittedMemoryInBytes);

// PFN_vkBindBufferMemory_f22e1edb is a proxy for callback PFN_vkBindBufferMemory.
VkResult PFN_vkBindBufferMemory_f22e1edb(VkDevice device, VkBuffer buffer, VkDeviceMemory memory, unsigned long long memoryOffset);

// PFN_vkBindImageMemory_56f456ab is a proxy for callback PFN_vkBindImageMemory.
VkResult PFN_vkBindImageMemory_56f456ab(VkDevice device, VkImage image, VkDeviceMemory memory, unsigned long long memoryOffset);

// PFN_vkGetBufferMemoryRequirements_4af23f40 is a proxy for callback PFN_vkGetBufferMemoryRequirements.
void PFN_vkGetBufferMemoryRequirements_4af23f40(VkDevice device, VkBuffer buffer, VkMemoryRequirements* pMemoryRequirements);

// PFN_vkGetImageMemoryRequirements_74385628 is a proxy for callback PFN_vkGetImageMemoryRequirements.
void PFN_vkGetImageMemoryRequirements_74385628(VkDevice device, VkImage image, VkMemoryRequirements* pMemoryRequirements);

// PFN_vkGetImageSparseMemoryRequirements_86dd1a84 is a proxy for callback PFN_vkGetImageSparseMemoryRequirements.
void PFN_vkGetImageSparseMemoryRequirements_86dd1a84(VkDevice device, VkImage image, unsigned int* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements* pSparseMemoryRequirements);

// PFN_vkGetPhysicalDeviceSparseImageFormatProperties_b8d919e9 is a proxy for callback PFN_vkGetPhysicalDeviceSparseImageFormatProperties.
void PFN_vkGetPhysicalDeviceSparseImageFormatProperties_b8d919e9(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType _type, VkSampleCountFlagBits samples, unsigned int usage, VkImageTiling tiling, unsigned int* pPropertyCount, VkSparseImageFormatProperties* pProperties);

// PFN_vkQueueBindSparse_cd067eaa is a proxy for callback PFN_vkQueueBindSparse.
VkResult PFN_vkQueueBindSparse_cd067eaa(VkQueue queue, unsigned int bindInfoCount, VkBindSparseInfo* pBindInfo, VkFence fence);

// PFN_vkCreateFence_f6662003 is a proxy for callback PFN_vkCreateFence.
VkResult PFN_vkCreateFence_f6662003(VkDevice device, VkFenceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkFence* pFence);

// PFN_vkDestroyFence_d1468627 is a proxy for callback PFN_vkDestroyFence.
void PFN_vkDestroyFence_d1468627(VkDevice device, VkFence fence, VkAllocationCallbacks* pAllocator);

// PFN_vkResetFences_7df2b051 is a proxy for callback PFN_vkResetFences.
VkResult PFN_vkResetFences_7df2b051(VkDevice device, unsigned int fenceCount, VkFence* pFences);

// PFN_vkGetFenceStatus_f2c52e1a is a proxy for callback PFN_vkGetFenceStatus.
VkResult PFN_vkGetFenceStatus_f2c52e1a(VkDevice device, VkFence fence);

// PFN_vkWaitForFences_899d94e6 is a proxy for callback PFN_vkWaitForFences.
VkResult PFN_vkWaitForFences_899d94e6(VkDevice device, unsigned int fenceCount, VkFence* pFences, unsigned int waitAll, unsigned long long timeout);

// PFN_vkCreateSemaphore_c37ad412 is a proxy for callback PFN_vkCreateSemaphore.
VkResult PFN_vkCreateSemaphore_c37ad412(VkDevice device, VkSemaphoreCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkSemaphore* pSemaphore);

// PFN_vkDestroySemaphore_1515c60 is a proxy for callback PFN_vkDestroySemaphore.
void PFN_vkDestroySemaphore_1515c60(VkDevice device, VkSemaphore semaphore, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateEvent_202113fc is a proxy for callback PFN_vkCreateEvent.
VkResult PFN_vkCreateEvent_202113fc(VkDevice device, VkEventCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkEvent* pEvent);

// PFN_vkDestroyEvent_701b5d8 is a proxy for callback PFN_vkDestroyEvent.
void PFN_vkDestroyEvent_701b5d8(VkDevice device, VkEvent event, VkAllocationCallbacks* pAllocator);

// PFN_vkGetEventStatus_7f476e86 is a proxy for callback PFN_vkGetEventStatus.
VkResult PFN_vkGetEventStatus_7f476e86(VkDevice device, VkEvent event);

// PFN_vkSetEvent_52745188 is a proxy for callback PFN_vkSetEvent.
VkResult PFN_vkSetEvent_52745188(VkDevice device, VkEvent event);

// PFN_vkResetEvent_2c03a325 is a proxy for callback PFN_vkResetEvent.
VkResult PFN_vkResetEvent_2c03a325(VkDevice device, VkEvent event);

// PFN_vkCreateQueryPool_99a5956a is a proxy for callback PFN_vkCreateQueryPool.
VkResult PFN_vkCreateQueryPool_99a5956a(VkDevice device, VkQueryPoolCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkQueryPool* pQueryPool);

// PFN_vkDestroyQueryPool_5b8e1d18 is a proxy for callback PFN_vkDestroyQueryPool.
void PFN_vkDestroyQueryPool_5b8e1d18(VkDevice device, VkQueryPool queryPool, VkAllocationCallbacks* pAllocator);

// PFN_vkGetQueryPoolResults_b2d2a5cb is a proxy for callback PFN_vkGetQueryPoolResults.
VkResult PFN_vkGetQueryPoolResults_b2d2a5cb(VkDevice device, VkQueryPool queryPool, unsigned int firstQuery, unsigned int queryCount, unsigned long int dataSize, void* pData, unsigned long long stride, unsigned int flags);

// PFN_vkCreateBuffer_cdf8f797 is a proxy for callback PFN_vkCreateBuffer.
VkResult PFN_vkCreateBuffer_cdf8f797(VkDevice device, VkBufferCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkBuffer* pBuffer);

// PFN_vkDestroyBuffer_f1dc33e0 is a proxy for callback PFN_vkDestroyBuffer.
void PFN_vkDestroyBuffer_f1dc33e0(VkDevice device, VkBuffer buffer, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateBufferView_f7636d40 is a proxy for callback PFN_vkCreateBufferView.
VkResult PFN_vkCreateBufferView_f7636d40(VkDevice device, VkBufferViewCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkBufferView* pView);

// PFN_vkDestroyBufferView_49aa56d8 is a proxy for callback PFN_vkDestroyBufferView.
void PFN_vkDestroyBufferView_49aa56d8(VkDevice device, VkBufferView bufferView, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateImage_deb21d04 is a proxy for callback PFN_vkCreateImage.
VkResult PFN_vkCreateImage_deb21d04(VkDevice device, VkImageCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkImage* pImage);

// PFN_vkDestroyImage_f992bb20 is a proxy for callback PFN_vkDestroyImage.
void PFN_vkDestroyImage_f992bb20(VkDevice device, VkImage image, VkAllocationCallbacks* pAllocator);

// PFN_vkGetImageSubresourceLayout_a0bcfd9d is a proxy for callback PFN_vkGetImageSubresourceLayout.
void PFN_vkGetImageSubresourceLayout_a0bcfd9d(VkDevice device, VkImage image, VkImageSubresource* pSubresource, VkSubresourceLayout* pLayout);

// PFN_vkCreateImageView_72cb902d is a proxy for callback PFN_vkCreateImageView.
VkResult PFN_vkCreateImageView_72cb902d(VkDevice device, VkImageViewCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkImageView* pView);

// PFN_vkDestroyImageView_b0e0185f is a proxy for callback PFN_vkDestroyImageView.
void PFN_vkDestroyImageView_b0e0185f(VkDevice device, VkImageView imageView, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateShaderModule_15afa953 is a proxy for callback PFN_vkCreateShaderModule.
VkResult PFN_vkCreateShaderModule_15afa953(VkDevice device, VkShaderModuleCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkShaderModule* pShaderModule);

// PFN_vkDestroyShaderModule_1d3cfeac is a proxy for callback PFN_vkDestroyShaderModule.
void PFN_vkDestroyShaderModule_1d3cfeac(VkDevice device, VkShaderModule shaderModule, VkAllocationCallbacks* pAllocator);

// PFN_vkCreatePipelineCache_7bac14c4 is a proxy for callback PFN_vkCreatePipelineCache.
VkResult PFN_vkCreatePipelineCache_7bac14c4(VkDevice device, VkPipelineCacheCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkPipelineCache* pPipelineCache);

// PFN_vkDestroyPipelineCache_56a6681e is a proxy for callback PFN_vkDestroyPipelineCache.
void PFN_vkDestroyPipelineCache_56a6681e(VkDevice device, VkPipelineCache pipelineCache, VkAllocationCallbacks* pAllocator);

// PFN_vkGetPipelineCacheData_ac8f8977 is a proxy for callback PFN_vkGetPipelineCacheData.
VkResult PFN_vkGetPipelineCacheData_ac8f8977(VkDevice device, VkPipelineCache pipelineCache, unsigned long int* pDataSize, void* pData);

// PFN_vkMergePipelineCaches_6b8cabfe is a proxy for callback PFN_vkMergePipelineCaches.
VkResult PFN_vkMergePipelineCaches_6b8cabfe(VkDevice device, VkPipelineCache dstCache, unsigned int srcCacheCount, VkPipelineCache* pSrcCaches);

// PFN_vkCreateGraphicsPipelines_c7fab507 is a proxy for callback PFN_vkCreateGraphicsPipelines.
VkResult PFN_vkCreateGraphicsPipelines_c7fab507(VkDevice device, VkPipelineCache pipelineCache, unsigned int createInfoCount, VkGraphicsPipelineCreateInfo* pCreateInfos, VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines);

// PFN_vkCreateComputePipelines_3616b207 is a proxy for callback PFN_vkCreateComputePipelines.
VkResult PFN_vkCreateComputePipelines_3616b207(VkDevice device, VkPipelineCache pipelineCache, unsigned int createInfoCount, VkComputePipelineCreateInfo* pCreateInfos, VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines);

// PFN_vkDestroyPipeline_765fa86 is a proxy for callback PFN_vkDestroyPipeline.
void PFN_vkDestroyPipeline_765fa86(VkDevice device, VkPipeline pipeline, VkAllocationCallbacks* pAllocator);

// PFN_vkCreatePipelineLayout_9867f1ef is a proxy for callback PFN_vkCreatePipelineLayout.
VkResult PFN_vkCreatePipelineLayout_9867f1ef(VkDevice device, VkPipelineLayoutCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkPipelineLayout* pPipelineLayout);

// PFN_vkDestroyPipelineLayout_fe4cc059 is a proxy for callback PFN_vkDestroyPipelineLayout.
void PFN_vkDestroyPipelineLayout_fe4cc059(VkDevice device, VkPipelineLayout pipelineLayout, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateSampler_53b15031 is a proxy for callback PFN_vkCreateSampler.
VkResult PFN_vkCreateSampler_53b15031(VkDevice device, VkSamplerCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkSampler* pSampler);

// PFN_vkDestroySampler_9dec906a is a proxy for callback PFN_vkDestroySampler.
void PFN_vkDestroySampler_9dec906a(VkDevice device, VkSampler sampler, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateDescriptorSetLayout_df81b6fb is a proxy for callback PFN_vkCreateDescriptorSetLayout.
VkResult PFN_vkCreateDescriptorSetLayout_df81b6fb(VkDevice device, VkDescriptorSetLayoutCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDescriptorSetLayout* pSetLayout);

// PFN_vkDestroyDescriptorSetLayout_f2eb1ab is a proxy for callback PFN_vkDestroyDescriptorSetLayout.
void PFN_vkDestroyDescriptorSetLayout_f2eb1ab(VkDevice device, VkDescriptorSetLayout descriptorSetLayout, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateDescriptorPool_ab14fe1b is a proxy for callback PFN_vkCreateDescriptorPool.
VkResult PFN_vkCreateDescriptorPool_ab14fe1b(VkDevice device, VkDescriptorPoolCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDescriptorPool* pDescriptorPool);

// PFN_vkDestroyDescriptorPool_cd3fcfad is a proxy for callback PFN_vkDestroyDescriptorPool.
void PFN_vkDestroyDescriptorPool_cd3fcfad(VkDevice device, VkDescriptorPool descriptorPool, VkAllocationCallbacks* pAllocator);

// PFN_vkResetDescriptorPool_eaa63710 is a proxy for callback PFN_vkResetDescriptorPool.
VkResult PFN_vkResetDescriptorPool_eaa63710(VkDevice device, VkDescriptorPool descriptorPool, unsigned int flags);

// PFN_vkAllocateDescriptorSets_f727f5c9 is a proxy for callback PFN_vkAllocateDescriptorSets.
VkResult PFN_vkAllocateDescriptorSets_f727f5c9(VkDevice device, VkDescriptorSetAllocateInfo* pAllocateInfo, VkDescriptorSet* pDescriptorSets);

// PFN_vkFreeDescriptorSets_54b3db78 is a proxy for callback PFN_vkFreeDescriptorSets.
VkResult PFN_vkFreeDescriptorSets_54b3db78(VkDevice device, VkDescriptorPool descriptorPool, unsigned int descriptorSetCount, VkDescriptorSet* pDescriptorSets);

// PFN_vkUpdateDescriptorSets_6f0b94ac is a proxy for callback PFN_vkUpdateDescriptorSets.
void PFN_vkUpdateDescriptorSets_6f0b94ac(VkDevice device, unsigned int descriptorWriteCount, VkWriteDescriptorSet* pDescriptorWrites, unsigned int descriptorCopyCount, VkCopyDescriptorSet* pDescriptorCopies);

// PFN_vkCreateFramebuffer_d64a4d97 is a proxy for callback PFN_vkCreateFramebuffer.
VkResult PFN_vkCreateFramebuffer_d64a4d97(VkDevice device, VkFramebufferCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkFramebuffer* pFramebuffer);

// PFN_vkDestroyFramebuffer_28209fda is a proxy for callback PFN_vkDestroyFramebuffer.
void PFN_vkDestroyFramebuffer_28209fda(VkDevice device, VkFramebuffer framebuffer, VkAllocationCallbacks* pAllocator);

// PFN_vkCreateRenderPass_8fadbef is a proxy for callback PFN_vkCreateRenderPass.
VkResult PFN_vkCreateRenderPass_8fadbef(VkDevice device, VkRenderPassCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkRenderPass* pRenderPass);

// PFN_vkDestroyRenderPass_b633e077 is a proxy for callback PFN_vkDestroyRenderPass.
void PFN_vkDestroyRenderPass_b633e077(VkDevice device, VkRenderPass renderPass, VkAllocationCallbacks* pAllocator);

// PFN_vkGetRenderAreaGranularity_bf72d2fc is a proxy for callback PFN_vkGetRenderAreaGranularity.
void PFN_vkGetRenderAreaGranularity_bf72d2fc(VkDevice device, VkRenderPass renderPass, VkExtent2D* pGranularity);

// PFN_vkCreateCommandPool_97050bd8 is a proxy for callback PFN_vkCreateCommandPool.
VkResult PFN_vkCreateCommandPool_97050bd8(VkDevice device, VkCommandPoolCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkCommandPool* pCommandPool);

// PFN_vkDestroyCommandPool_696fd995 is a proxy for callback PFN_vkDestroyCommandPool.
void PFN_vkDestroyCommandPool_696fd995(VkDevice device, VkCommandPool commandPool, VkAllocationCallbacks* pAllocator);

// PFN_vkResetCommandPool_b1d2d0fa is a proxy for callback PFN_vkResetCommandPool.
VkResult PFN_vkResetCommandPool_b1d2d0fa(VkDevice device, VkCommandPool commandPool, unsigned int flags);

// PFN_vkAllocateCommandBuffers_22d26bfa is a proxy for callback PFN_vkAllocateCommandBuffers.
VkResult PFN_vkAllocateCommandBuffers_22d26bfa(VkDevice device, VkCommandBufferAllocateInfo* pAllocateInfo, VkCommandBuffer* pCommandBuffers);

// PFN_vkFreeCommandBuffers_8146454b is a proxy for callback PFN_vkFreeCommandBuffers.
void PFN_vkFreeCommandBuffers_8146454b(VkDevice device, VkCommandPool commandPool, unsigned int commandBufferCount, VkCommandBuffer* pCommandBuffers);

// PFN_vkBeginCommandBuffer_76cc70c1 is a proxy for callback PFN_vkBeginCommandBuffer.
VkResult PFN_vkBeginCommandBuffer_76cc70c1(VkCommandBuffer commandBuffer, VkCommandBufferBeginInfo* pBeginInfo);

// PFN_vkEndCommandBuffer_4956641 is a proxy for callback PFN_vkEndCommandBuffer.
VkResult PFN_vkEndCommandBuffer_4956641(VkCommandBuffer commandBuffer);

// PFN_vkResetCommandBuffer_9b0911d3 is a proxy for callback PFN_vkResetCommandBuffer.
VkResult PFN_vkResetCommandBuffer_9b0911d3(VkCommandBuffer commandBuffer, unsigned int flags);

// PFN_vkCmdBindPipeline_a2c7555b is a proxy for callback PFN_vkCmdBindPipeline.
void PFN_vkCmdBindPipeline_a2c7555b(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline);

// PFN_vkCmdSetViewport_edc0e9f4 is a proxy for callback PFN_vkCmdSetViewport.
void PFN_vkCmdSetViewport_edc0e9f4(VkCommandBuffer commandBuffer, unsigned int firstViewport, unsigned int viewportCount, VkViewport* pViewports);

// PFN_vkCmdSetScissor_cc776c1c is a proxy for callback PFN_vkCmdSetScissor.
void PFN_vkCmdSetScissor_cc776c1c(VkCommandBuffer commandBuffer, unsigned int firstScissor, unsigned int scissorCount, VkRect2D* pScissors);

// PFN_vkCmdSetLineWidth_1080bc84 is a proxy for callback PFN_vkCmdSetLineWidth.
void PFN_vkCmdSetLineWidth_1080bc84(VkCommandBuffer commandBuffer, float lineWidth);

// PFN_vkCmdSetDepthBias_e2d686bd is a proxy for callback PFN_vkCmdSetDepthBias.
void PFN_vkCmdSetDepthBias_e2d686bd(VkCommandBuffer commandBuffer, float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor);

// PFN_vkCmdSetDepthBounds_98318da7 is a proxy for callback PFN_vkCmdSetDepthBounds.
void PFN_vkCmdSetDepthBounds_98318da7(VkCommandBuffer commandBuffer, float minDepthBounds, float maxDepthBounds);

// PFN_vkCmdSetStencilCompareMask_1c528e50 is a proxy for callback PFN_vkCmdSetStencilCompareMask.
void PFN_vkCmdSetStencilCompareMask_1c528e50(VkCommandBuffer commandBuffer, unsigned int faceMask, unsigned int compareMask);

// PFN_vkCmdSetStencilWriteMask_663bc6f1 is a proxy for callback PFN_vkCmdSetStencilWriteMask.
void PFN_vkCmdSetStencilWriteMask_663bc6f1(VkCommandBuffer commandBuffer, unsigned int faceMask, unsigned int writeMask);

// PFN_vkCmdSetStencilReference_7570ae73 is a proxy for callback PFN_vkCmdSetStencilReference.
void PFN_vkCmdSetStencilReference_7570ae73(VkCommandBuffer commandBuffer, unsigned int faceMask, unsigned int reference);

// PFN_vkCmdBindDescriptorSets_92256a49 is a proxy for callback PFN_vkCmdBindDescriptorSets.
void PFN_vkCmdBindDescriptorSets_92256a49(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, unsigned int firstSet, unsigned int descriptorSetCount, VkDescriptorSet* pDescriptorSets, unsigned int dynamicOffsetCount, unsigned int* pDynamicOffsets);

// PFN_vkCmdBindIndexBuffer_8a8b689c is a proxy for callback PFN_vkCmdBindIndexBuffer.
void PFN_vkCmdBindIndexBuffer_8a8b689c(VkCommandBuffer commandBuffer, VkBuffer buffer, unsigned long long offset, VkIndexType indexType);

// PFN_vkCmdBindVertexBuffers_cd53a724 is a proxy for callback PFN_vkCmdBindVertexBuffers.
void PFN_vkCmdBindVertexBuffers_cd53a724(VkCommandBuffer commandBuffer, unsigned int firstBinding, unsigned int bindingCount, VkBuffer* pBuffers, unsigned long long* pOffsets);

// PFN_vkCmdDraw_4706e5bd is a proxy for callback PFN_vkCmdDraw.
void PFN_vkCmdDraw_4706e5bd(VkCommandBuffer commandBuffer, unsigned int vertexCount, unsigned int instanceCount, unsigned int firstVertex, unsigned int firstInstance);

// PFN_vkCmdDrawIndexed_9854657c is a proxy for callback PFN_vkCmdDrawIndexed.
void PFN_vkCmdDrawIndexed_9854657c(VkCommandBuffer commandBuffer, unsigned int indexCount, unsigned int instanceCount, unsigned int firstIndex, int vertexOffset, unsigned int firstInstance);

// PFN_vkCmdDrawIndirect_394da878 is a proxy for callback PFN_vkCmdDrawIndirect.
void PFN_vkCmdDrawIndirect_394da878(VkCommandBuffer commandBuffer, VkBuffer buffer, unsigned long long offset, unsigned int drawCount, unsigned int stride);

// PFN_vkCmdDrawIndexedIndirect_4db44457 is a proxy for callback PFN_vkCmdDrawIndexedIndirect.
void PFN_vkCmdDrawIndexedIndirect_4db44457(VkCommandBuffer commandBuffer, VkBuffer buffer, unsigned long long offset, unsigned int drawCount, unsigned int stride);

// PFN_vkCmdDispatch_9bab1ef5 is a proxy for callback PFN_vkCmdDispatch.
void PFN_vkCmdDispatch_9bab1ef5(VkCommandBuffer commandBuffer, unsigned int x, unsigned int y, unsigned int z);

// PFN_vkCmdDispatchIndirect_4ccb8f6b is a proxy for callback PFN_vkCmdDispatchIndirect.
void PFN_vkCmdDispatchIndirect_4ccb8f6b(VkCommandBuffer commandBuffer, VkBuffer buffer, unsigned long long offset);

// PFN_vkCmdCopyBuffer_7f558dee is a proxy for callback PFN_vkCmdCopyBuffer.
void PFN_vkCmdCopyBuffer_7f558dee(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkBuffer dstBuffer, unsigned int regionCount, VkBufferCopy* pRegions);

// PFN_vkCmdCopyImage_cec34cbd is a proxy for callback PFN_vkCmdCopyImage.
void PFN_vkCmdCopyImage_cec34cbd(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, unsigned int regionCount, VkImageCopy* pRegions);

// PFN_vkCmdBlitImage_19ef95de is a proxy for callback PFN_vkCmdBlitImage.
void PFN_vkCmdBlitImage_19ef95de(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, unsigned int regionCount, VkImageBlit* pRegions, VkFilter filter);

// PFN_vkCmdCopyBufferToImage_4394592e is a proxy for callback PFN_vkCmdCopyBufferToImage.
void PFN_vkCmdCopyBufferToImage_4394592e(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkImage dstImage, VkImageLayout dstImageLayout, unsigned int regionCount, VkBufferImageCopy* pRegions);

// PFN_vkCmdCopyImageToBuffer_4185ace5 is a proxy for callback PFN_vkCmdCopyImageToBuffer.
void PFN_vkCmdCopyImageToBuffer_4185ace5(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkBuffer dstBuffer, unsigned int regionCount, VkBufferImageCopy* pRegions);

// PFN_vkCmdUpdateBuffer_c541b249 is a proxy for callback PFN_vkCmdUpdateBuffer.
void PFN_vkCmdUpdateBuffer_c541b249(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, unsigned long long dstOffset, unsigned long long dataSize, unsigned int* pData);

// PFN_vkCmdFillBuffer_f494a82d is a proxy for callback PFN_vkCmdFillBuffer.
void PFN_vkCmdFillBuffer_f494a82d(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, unsigned long long dstOffset, unsigned long long size, unsigned int data);

// PFN_vkCmdClearColorImage_453252cf is a proxy for callback PFN_vkCmdClearColorImage.
void PFN_vkCmdClearColorImage_453252cf(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, VkClearColorValue* pColor, unsigned int rangeCount, VkImageSubresourceRange* pRanges);

// PFN_vkCmdClearDepthStencilImage_1045179c is a proxy for callback PFN_vkCmdClearDepthStencilImage.
void PFN_vkCmdClearDepthStencilImage_1045179c(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, VkClearDepthStencilValue* pDepthStencil, unsigned int rangeCount, VkImageSubresourceRange* pRanges);

// PFN_vkCmdClearAttachments_4b13dddc is a proxy for callback PFN_vkCmdClearAttachments.
void PFN_vkCmdClearAttachments_4b13dddc(VkCommandBuffer commandBuffer, unsigned int attachmentCount, VkClearAttachment* pAttachments, unsigned int rectCount, VkClearRect* pRects);

// PFN_vkCmdResolveImage_8773c849 is a proxy for callback PFN_vkCmdResolveImage.
void PFN_vkCmdResolveImage_8773c849(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, unsigned int regionCount, VkImageResolve* pRegions);

// PFN_vkCmdSetEvent_2f34cf9e is a proxy for callback PFN_vkCmdSetEvent.
void PFN_vkCmdSetEvent_2f34cf9e(VkCommandBuffer commandBuffer, VkEvent event, unsigned int stageMask);

// PFN_vkCmdResetEvent_272cd5f1 is a proxy for callback PFN_vkCmdResetEvent.
void PFN_vkCmdResetEvent_272cd5f1(VkCommandBuffer commandBuffer, VkEvent event, unsigned int stageMask);

// PFN_vkCmdWaitEvents_f92c9b96 is a proxy for callback PFN_vkCmdWaitEvents.
void PFN_vkCmdWaitEvents_f92c9b96(VkCommandBuffer commandBuffer, unsigned int eventCount, VkEvent* pEvents, unsigned int srcStageMask, unsigned int dstStageMask, unsigned int memoryBarrierCount, VkMemoryBarrier* pMemoryBarriers, unsigned int bufferMemoryBarrierCount, VkBufferMemoryBarrier* pBufferMemoryBarriers, unsigned int imageMemoryBarrierCount, VkImageMemoryBarrier* pImageMemoryBarriers);

// PFN_vkCmdPipelineBarrier_d83ec454 is a proxy for callback PFN_vkCmdPipelineBarrier.
void PFN_vkCmdPipelineBarrier_d83ec454(VkCommandBuffer commandBuffer, unsigned int srcStageMask, unsigned int dstStageMask, unsigned int dependencyFlags, unsigned int memoryBarrierCount, VkMemoryBarrier* pMemoryBarriers, unsigned int bufferMemoryBarrierCount, VkBufferMemoryBarrier* pBufferMemoryBarriers, unsigned int imageMemoryBarrierCount, VkImageMemoryBarrier* pImageMemoryBarriers);

// PFN_vkCmdBeginQuery_828d9f0d is a proxy for callback PFN_vkCmdBeginQuery.
void PFN_vkCmdBeginQuery_828d9f0d(VkCommandBuffer commandBuffer, VkQueryPool queryPool, unsigned int query, unsigned int flags);

// PFN_vkCmdEndQuery_8b221e1f is a proxy for callback PFN_vkCmdEndQuery.
void PFN_vkCmdEndQuery_8b221e1f(VkCommandBuffer commandBuffer, VkQueryPool queryPool, unsigned int query);

// PFN_vkCmdResetQueryPool_d5274cab is a proxy for callback PFN_vkCmdResetQueryPool.
void PFN_vkCmdResetQueryPool_d5274cab(VkCommandBuffer commandBuffer, VkQueryPool queryPool, unsigned int firstQuery, unsigned int queryCount);

// PFN_vkCmdWriteTimestamp_dc3d5864 is a proxy for callback PFN_vkCmdWriteTimestamp.
void PFN_vkCmdWriteTimestamp_dc3d5864(VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkQueryPool queryPool, unsigned int query);

// PFN_vkCmdCopyQueryPoolResults_a38fbcd6 is a proxy for callback PFN_vkCmdCopyQueryPoolResults.
void PFN_vkCmdCopyQueryPoolResults_a38fbcd6(VkCommandBuffer commandBuffer, VkQueryPool queryPool, unsigned int firstQuery, unsigned int queryCount, VkBuffer dstBuffer, unsigned long long dstOffset, unsigned long long stride, unsigned int flags);

// PFN_vkCmdPushConstants_32b3fc16 is a proxy for callback PFN_vkCmdPushConstants.
void PFN_vkCmdPushConstants_32b3fc16(VkCommandBuffer commandBuffer, VkPipelineLayout layout, unsigned int stageFlags, unsigned int offset, unsigned int size, void* pValues);

// PFN_vkCmdBeginRenderPass_9d5a29dd is a proxy for callback PFN_vkCmdBeginRenderPass.
void PFN_vkCmdBeginRenderPass_9d5a29dd(VkCommandBuffer commandBuffer, VkRenderPassBeginInfo* pRenderPassBegin, VkSubpassContents contents);

// PFN_vkCmdNextSubpass_ffe19f9a is a proxy for callback PFN_vkCmdNextSubpass.
void PFN_vkCmdNextSubpass_ffe19f9a(VkCommandBuffer commandBuffer, VkSubpassContents contents);

// PFN_vkCmdEndRenderPass_d1799d75 is a proxy for callback PFN_vkCmdEndRenderPass.
void PFN_vkCmdEndRenderPass_d1799d75(VkCommandBuffer commandBuffer);

// PFN_vkCmdExecuteCommands_ba33faee is a proxy for callback PFN_vkCmdExecuteCommands.
void PFN_vkCmdExecuteCommands_ba33faee(VkCommandBuffer commandBuffer, unsigned int commandBufferCount, VkCommandBuffer* pCommandBuffers);

// PFN_vkDestroySurfaceKHR_d5f3492 is a proxy for callback PFN_vkDestroySurfaceKHR.
void PFN_vkDestroySurfaceKHR_d5f3492(VkInstance instance, VkSurfaceKHR surface, VkAllocationCallbacks* pAllocator);

// PFN_vkGetPhysicalDeviceSurfaceSupportKHR_1f637f55 is a proxy for callback PFN_vkGetPhysicalDeviceSurfaceSupportKHR.
VkResult PFN_vkGetPhysicalDeviceSurfaceSupportKHR_1f637f55(VkPhysicalDevice physicalDevice, unsigned int queueFamilyIndex, VkSurfaceKHR surface, unsigned int* pSupported);

// PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR_7e3a1b89 is a proxy for callback PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR.
VkResult PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR_7e3a1b89(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilitiesKHR* pSurfaceCapabilities);

// PFN_vkGetPhysicalDeviceSurfaceFormatsKHR_8bbbab0c is a proxy for callback PFN_vkGetPhysicalDeviceSurfaceFormatsKHR.
VkResult PFN_vkGetPhysicalDeviceSurfaceFormatsKHR_8bbbab0c(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, unsigned int* pSurfaceFormatCount, VkSurfaceFormatKHR* pSurfaceFormats);

// PFN_vkGetPhysicalDeviceSurfacePresentModesKHR_79c877 is a proxy for callback PFN_vkGetPhysicalDeviceSurfacePresentModesKHR.
VkResult PFN_vkGetPhysicalDeviceSurfacePresentModesKHR_79c877(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, unsigned int* pPresentModeCount, VkPresentModeKHR* pPresentModes);

// PFN_vkCreateSwapchainKHR_2b7f1c9e is a proxy for callback PFN_vkCreateSwapchainKHR.
VkResult PFN_vkCreateSwapchainKHR_2b7f1c9e(VkDevice device, VkSwapchainCreateInfoKHR* pCreateInfo, VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchain);

// PFN_vkDestroySwapchainKHR_23ec4b61 is a proxy for callback PFN_vkDestroySwapchainKHR.
void PFN_vkDestroySwapchainKHR_23ec4b61(VkDevice device, VkSwapchainKHR swapchain, VkAllocationCallbacks* pAllocator);

// PFN_vkGetSwapchainImagesKHR_caef1c13 is a proxy for callback PFN_vkGetSwapchainImagesKHR.
VkResult PFN_vkGetSwapchainImagesKHR_caef1c13(VkDevice device, VkSwapchainKHR swapchain, unsigned int* pSwapchainImageCount, VkImage* pSwapchainImages);

// PFN_vkAcquireNextImageKHR_bce813c0 is a proxy for callback PFN_vkAcquireNextImageKHR.
VkResult PFN_vkAcquireNextImageKHR_bce813c0(VkDevice device, VkSwapchainKHR swapchain, unsigned long long timeout, VkSemaphore semaphore, VkFence fence, unsigned int* pImageIndex);

// PFN_vkQueuePresentKHR_fa5ab313 is a proxy for callback PFN_vkQueuePresentKHR.
VkResult PFN_vkQueuePresentKHR_fa5ab313(VkQueue queue, VkPresentInfoKHR* pPresentInfo);

// PFN_vkGetPhysicalDeviceDisplayPropertiesKHR_625cafbe is a proxy for callback PFN_vkGetPhysicalDeviceDisplayPropertiesKHR.
VkResult PFN_vkGetPhysicalDeviceDisplayPropertiesKHR_625cafbe(VkPhysicalDevice physicalDevice, unsigned int* pPropertyCount, VkDisplayPropertiesKHR* pProperties);

// PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR_290f765f is a proxy for callback PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR.
VkResult PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR_290f765f(VkPhysicalDevice physicalDevice, unsigned int* pPropertyCount, VkDisplayPlanePropertiesKHR* pProperties);

// PFN_vkGetDisplayPlaneSupportedDisplaysKHR_c06c75a8 is a proxy for callback PFN_vkGetDisplayPlaneSupportedDisplaysKHR.
VkResult PFN_vkGetDisplayPlaneSupportedDisplaysKHR_c06c75a8(VkPhysicalDevice physicalDevice, unsigned int planeIndex, unsigned int* pDisplayCount, VkDisplayKHR* pDisplays);

// PFN_vkGetDisplayModePropertiesKHR_fa283554 is a proxy for callback PFN_vkGetDisplayModePropertiesKHR.
VkResult PFN_vkGetDisplayModePropertiesKHR_fa283554(VkPhysicalDevice physicalDevice, VkDisplayKHR display, unsigned int* pPropertyCount, VkDisplayModePropertiesKHR* pProperties);

// PFN_vkCreateDisplayModeKHR_aa042680 is a proxy for callback PFN_vkCreateDisplayModeKHR.
VkResult PFN_vkCreateDisplayModeKHR_aa042680(VkPhysicalDevice physicalDevice, VkDisplayKHR display, VkDisplayModeCreateInfoKHR* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDisplayModeKHR* pMode);

// PFN_vkGetDisplayPlaneCapabilitiesKHR_9fc9571d is a proxy for callback PFN_vkGetDisplayPlaneCapabilitiesKHR.
VkResult PFN_vkGetDisplayPlaneCapabilitiesKHR_9fc9571d(VkPhysicalDevice physicalDevice, VkDisplayModeKHR mode, unsigned int planeIndex, VkDisplayPlaneCapabilitiesKHR* pCapabilities);

// PFN_vkCreateDisplayPlaneSurfaceKHR_a82dd380 is a proxy for callback PFN_vkCreateDisplayPlaneSurfaceKHR.
VkResult PFN_vkCreateDisplayPlaneSurfaceKHR_a82dd380(VkInstance instance, VkDisplaySurfaceCreateInfoKHR* pCreateInfo, VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);

// PFN_vkCreateSharedSwapchainsKHR_4bb273f is a proxy for callback PFN_vkCreateSharedSwapchainsKHR.
VkResult PFN_vkCreateSharedSwapchainsKHR_4bb273f(VkDevice device, unsigned int swapchainCount, VkSwapchainCreateInfoKHR* pCreateInfos, VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchains);

// PFN_vkCreateAndroidSurfaceKHR_45c62d4 is a proxy for callback PFN_vkCreateAndroidSurfaceKHR.
VkResult PFN_vkCreateAndroidSurfaceKHR_45c62d4(VkInstance instance, VkAndroidSurfaceCreateInfoKHR* pCreateInfo, VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);

// PFN_vkDebugReportCallbackEXT_c918aac4 is a proxy for callback PFN_vkDebugReportCallbackEXT.
unsigned int PFN_vkDebugReportCallbackEXT_c918aac4(unsigned int flags, VkDebugReportObjectTypeEXT objectType, unsigned long long object, unsigned long int location, int messageCode, char* pLayerPrefix, char* pMessage, void* pUserData);

// PFN_vkCreateDebugReportCallbackEXT_3f23708f is a proxy for callback PFN_vkCreateDebugReportCallbackEXT.
VkResult PFN_vkCreateDebugReportCallbackEXT_3f23708f(VkInstance instance, VkDebugReportCallbackCreateInfoEXT* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDebugReportCallbackEXT* pCallback);

// PFN_vkDestroyDebugReportCallbackEXT_5ab77651 is a proxy for callback PFN_vkDestroyDebugReportCallbackEXT.
void PFN_vkDestroyDebugReportCallbackEXT_5ab77651(VkInstance instance, VkDebugReportCallbackEXT callback, VkAllocationCallbacks* pAllocator);

// PFN_vkDebugReportMessageEXT_847e0f11 is a proxy for callback PFN_vkDebugReportMessageEXT.
void PFN_vkDebugReportMessageEXT_847e0f11(VkInstance instance, unsigned int flags, VkDebugReportObjectTypeEXT objectType, unsigned long long object, unsigned long int location, int messageCode, char* pLayerPrefix, char* pMessage);

// PFN_vkDebugMarkerSetObjectTagEXT_64dcd960 is a proxy for callback PFN_vkDebugMarkerSetObjectTagEXT.
VkResult PFN_vkDebugMarkerSetObjectTagEXT_64dcd960(VkDevice device, VkDebugMarkerObjectTagInfoEXT* pTagInfo);

// PFN_vkDebugMarkerSetObjectNameEXT_62b5ccd1 is a proxy for callback PFN_vkDebugMarkerSetObjectNameEXT.
VkResult PFN_vkDebugMarkerSetObjectNameEXT_62b5ccd1(VkDevice device, VkDebugMarkerObjectNameInfoEXT* pNameInfo);

// PFN_vkCmdDebugMarkerBeginEXT_f3766240 is a proxy for callback PFN_vkCmdDebugMarkerBeginEXT.
void PFN_vkCmdDebugMarkerBeginEXT_f3766240(VkCommandBuffer commandBuffer, VkDebugMarkerMarkerInfoEXT* pMarkerInfo);

// PFN_vkCmdDebugMarkerEndEXT_66e51d45 is a proxy for callback PFN_vkCmdDebugMarkerEndEXT.
void PFN_vkCmdDebugMarkerEndEXT_66e51d45(VkCommandBuffer commandBuffer);

// PFN_vkCmdDebugMarkerInsertEXT_a68b2dd7 is a proxy for callback PFN_vkCmdDebugMarkerInsertEXT.
void PFN_vkCmdDebugMarkerInsertEXT_a68b2dd7(VkCommandBuffer commandBuffer, VkDebugMarkerMarkerInfoEXT* pMarkerInfo);

